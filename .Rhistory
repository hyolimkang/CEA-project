life_exp          =  72.68)
owsa <- function (v_cost           ,
delivery_cost    ,
tot_pop          ,
vacc_pop         ,
postvacc_p1      ,
facility_cost    ,
dmc              ,
dnmc             ,
indirect         ,
ve               ,
dw               ,
illness_duration ,
cfr              ,
age_death        ,
life_exp) {
totcost_vacc       <- (v_cost + delivery_cost) * (vacc_pop) + (postvacc_p1) * (facility_cost + dmc + dnmc + indirect)
prevacc            <- (postvacc_p1)/(1-ve*(vacc_pop/tot_pop))
totcost_unvacc     <- (prevacc)*(facility_cost+ dmc + dnmc + indirect)
incremental_cost   <- (totcost_vacc) - (totcost_unvacc)
incremental_effect <- (prevacc)      - (postvacc_p1)
icer               <- incremental_cost / incremental_effect
distance           <- (life_exp) - (age_death)
pre_death          <- (cfr)*(prevacc)
post_death         <- (cfr)*(postvacc_p1)
yll_pre            <- (pre_death)*(distance)
yll_post           <- (post_death)*(distance)
yld_pre            <- (prevacc)*(dw)*(illness_duration)
yld_post           <- (postvacc_p1)*(dw)*(illness_duration)
yld_averted        <- (prevacc - postvacc_p1)* (dw) *(illness_duration)
yll_averted        <- (yll_pre)  -(yll_post)
daly_total         <- (yll_averted)  + (yld_averted)
icer_daly          <- incremental_cost / daly_total
return(icer_daly)
}
# results: i want the lower value of icer when controlling all the other variables
# for instance, if i wan the lower value icer of v_cost, i want to put lower value for v_cost
# and controlling all other variables to the mid values
icer_low   <- owsa (v_cost            = 2.96,
delivery_cost     = 1.49 ,
tot_pop           = 159831,
vacc_pop          = 113420,
postvacc_p1       = 23,
facility_cost     = 97.33 ,
dmc               = 183.07 ,
dnmc              = 30.13,
indirect          = 73.09 ,
ve                = .81 ,
dw                = .052,
illness_duration  = .043  ,
cfr               = .019 ,
age_death         =  7.5  ,
life_exp          =  72.68)
icer_low
x <- runif(1, 0, 10)
if(x>3) {
y <-10
} else {
y<-0
}
x<- matrix(1:6, 2,3)
for (i in seq_len(ncol(x))) {
for(j in seq_len(ncol(x))) {
print(x[i,j])
}
}
x<- matrix(1:6, 2,3)
x
y<- matrix(data = 6, nrow=3, ncol=2)
y
y<- matrix(data = 1:6, nrow=3, ncol=2)
y
y<- matrix(data = 1:10, nrow=3, ncol=2)
y<- matrix(data = 1:8, nrow=4, ncol=2)
?seq_len
x<- matrix(1:6, 2,3)
for (i in seq_len(ncol(x))) {
for(j in seq_len(ncol(x))) {
print(x[i,j])
}
}
x<- matrix(1:6, 2,3)
for (i in seq_len(nrow(x))) {
for(j in seq_len(ncol(x))) {
print(x[i,j])
}
}
x<- matrix(1:6, 2,3)
x
icer <- data.frame(matrix(NA, nrow = nrow(param_table), ncol = 4))
names(icer) <- c("names","mid", "low","high")
icer$name<- param_table$name
# icer calculating function
icer_calc <- function (params){
v_cost <- params[params$name == "v_cost", 2]
delivery_cost <- params[params$name == "delivery_cost", 2]
tot_pop <- params[params$name == "tot_pop", 2]
vacc_pop <- params[params$name == "vacc_pop", 2]
postvacc_p1  <- params[params$name == "postvacc_p1 ", 2]
facility_cost <- params[params$name == "facility_cost", 2]
dmc <- params[params$name == "dmc", 2]
dnmc <- params[params$name == "dnmc", 2]
indirect <- params[params$name == "indirect", 2]
ve <- params[params$name == "ve", 2]
dw <- params[params$name == "dw", 2]
illness_duration <- params[params$name == "illness_duration", 2]
cfr <- params[params$name == "cfr", 2]
age_death <- params[params$name == "age_death", 2]
life_exp <- params[params$name == "life_exp", 2]
# formulas for icer
totcost_vacc       <- (v_cost + delivery_cost) * (vacc_pop) +
(postvacc_p1) * (facility_cost + dmc + dnmc + indirect)
prevacc            <- (postvacc_p1)/(1-ve*(vacc_pop/tot_pop))
totcost_unvacc     <- (prevacc)*(facility_cost+ dmc + dnmc + indirect)
incremental_cost   <- (totcost_vacc) - (totcost_unvacc)
incremental_effect <- (prevacc)      - (postvacc_p1)
icer               <- incremental_cost / incremental_effect
distance           <- (life_exp) - (age_death)
pre_death          <- (cfr)*(prevacc)
post_death         <- (cfr)*(postvacc_p1)
yll_pre            <- (pre_death)*(distance)
yll_post           <- (post_death)*(distance)
yld_pre            <- (prevacc)*(dw)*(illness_duration)
yld_post           <- (postvacc_p1)*(dw)*(illness_duration)
yld_averted        <- (prevacc - postvacc_p1)* (dw) *(illness_duration)
yll_averted        <- (yll_pre)  -(yll_post)
daly_total         <- (yll_averted)  + (yld_averted)
icer_daly          <- incremental_cost / daly_total
return(list(icer_daly = icer_daly))
}
# parameter data table
param       <- data.frame (v_cost           = c(mid = 2.96,  low = 2.96,   high = 2.96),
delivery_cost    = c(mid = 1.49,  low = 0.246,  high = 4.752),
tot_pop          = c(mid = 159831,low = 159831, high = 159831),
vacc_pop         = c(mid = 113420, low = 113420, high = 113420),
postvacc_p1      = c(mid = 23,    low =23,      high =23),
facility_cost    = c(mid = 97.33, low = 16.676, high = 301.209),
dmc              = c(mid = 183.07,low = 18.507, high =532.241),
dnmc             = c(mid =30.13,  low =  4.361, high = 118.718),
indirect         = c(mid = 73.09, low = 32.370, high = 135.262),
ve               = c(mid = 0.81,  low =  0.55,  high =  0.916),
dw               = c(mid = 0.052, low =  0.032, high = 0.078),
illness_duration = c(mid =0.043,  low = 0.0392, high = 0.0469),
cfr              = c(mid = 0.019, low = 0.011,  high =  0.0441),
age_death        = c(mid = 7.5,   low = 1.840,  high = 13.95),
life_exp         = c(mid = 72.68, low =  69.576,high = 78.70))
param_table <- data.frame(t(param))
names(param_table) <- c("mid", "low", "high")
param_table$name <-   c("v_cost", "delivery_cost", "tot_pop", "vacc_pop", "postvacc_p1",
"facility_cost", "dmc", "dnmc", "indirect", "ve", "dw", "illness_duration",
"cfr", "age_death", "life_exp")
icer
icer <- data.frame(matrix(NA, nrow = nrow(param_table), ncol = 4))
names(icer) <- c("names","mid", "low","high")
icer$name<- param_table$name
icer$mid <- icer_calc(param_table[,c("name", "mid")])
icer$mid
icer_mid <- icer_calc(param_table[,c("name", "mid")])
icer$mid <- icer_mid$icer_daly
icer_mid$icer_daly
d <- param_table[,c("name", "mid")
]
d
icer_calc(d)
params = d
params[params$name == "v_cost", 2]
params[params$name == "delivery_cost", 2]
params[params$name == "tot_pop", 2]
v_cost <- params[params$name == "v_cost", 2]
delivery_cost <- params[params$name == "delivery_cost", 2]
tot_pop <- params[params$name == "tot_pop", 2]
vacc_pop <- params[params$name == "vacc_pop", 2]
postvacc_p1  <- params[params$name == "postvacc_p1 ", 2]
facility_cost <- params[params$name == "facility_cost", 2]
dmc <- params[params$name == "dmc", 2]
dnmc <- params[params$name == "dnmc", 2]
indirect <- params[params$name == "indirect", 2]
ve <- params[params$name == "ve", 2]
dw <- params[params$name == "dw", 2]
illness_duration <- params[params$name == "illness_duration", 2]
cfr <- params[params$name == "cfr", 2]
age_death <- params[params$name == "age_death", 2]
life_exp <- params[params$name == "life_exp", 2]
totcost_vacc       <- (v_cost + delivery_cost) * (vacc_pop) +
(postvacc_p1) * (facility_cost + dmc + dnmc + indirect)
totcost_vacc
vacc_pop
facility_cost
dmc
indirect
dnmc
facility_cost + dmc + dnmc + indirect
postvacc_p1
postvacc_p1
View(param_table)
View(params)
params[params$name == "postvacc_p1 ", 2]
params
postvacc_p1  <- params[params$name == "postvacc_p1", 2]
postvacc_p1
icer_calc <- function (params){
v_cost <- params[params$name == "v_cost", 2]
delivery_cost <- params[params$name == "delivery_cost", 2]
tot_pop <- params[params$name == "tot_pop", 2]
vacc_pop <- params[params$name == "vacc_pop", 2]
postvacc_p1  <- params[params$name == "postvacc_p1", 2]
facility_cost <- params[params$name == "facility_cost", 2]
dmc <- params[params$name == "dmc", 2]
dnmc <- params[params$name == "dnmc", 2]
indirect <- params[params$name == "indirect", 2]
ve <- params[params$name == "ve", 2]
dw <- params[params$name == "dw", 2]
illness_duration <- params[params$name == "illness_duration", 2]
cfr <- params[params$name == "cfr", 2]
age_death <- params[params$name == "age_death", 2]
life_exp <- params[params$name == "life_exp", 2]
# formulas for icer
totcost_vacc       <- (v_cost + delivery_cost) * (vacc_pop) +
(postvacc_p1) * (facility_cost + dmc + dnmc + indirect)
prevacc            <- (postvacc_p1)/(1-ve*(vacc_pop/tot_pop))
totcost_unvacc     <- (prevacc)*(facility_cost+ dmc + dnmc + indirect)
incremental_cost   <- (totcost_vacc) - (totcost_unvacc)
incremental_effect <- (prevacc)      - (postvacc_p1)
icer               <- incremental_cost / incremental_effect
distance           <- (life_exp) - (age_death)
pre_death          <- (cfr)*(prevacc)
post_death         <- (cfr)*(postvacc_p1)
yll_pre            <- (pre_death)*(distance)
yll_post           <- (post_death)*(distance)
yld_pre            <- (prevacc)*(dw)*(illness_duration)
yld_post           <- (postvacc_p1)*(dw)*(illness_duration)
yld_averted        <- (prevacc - postvacc_p1)* (dw) *(illness_duration)
yll_averted        <- (yll_pre)  -(yll_post)
daly_total         <- (yll_averted)  + (yld_averted)
icer_daly          <- incremental_cost / daly_total
return(list(icer_daly = icer_daly))
}
icer_mid <- icer_calc(param_table[,c("name", "mid")])
icer$mid <- icer_mid$icer_daly
icer$mid
base_input <- param_table[,c("name","mid")]
names(base_input) <- c("name","val")
for (nm in icer$name) {
temp_input <- base_input
low <- param_table[param_table$name == nm, "low")]
temp_input[temp_input$name == nm, "val"] <- low
low_icer <- icer_calc(temp_input)
icer[icer$name == nm, "low"] <- low_icer
high <- param_table[param_table$name == nm, "high")]
temp_input[temp_input$name == nm, "val"] <- high
high_icer <- icer_calc(temp_input)
icer[icer$name == nm, "high"] <- high_icer
}
base_input <- param_table[,c("name","mid")]
names(base_input) <- c("name","val")
for (nm in icer$name) {
temp_input <- base_input
low <- param_table[param_table$name == nm, "low"]
temp_input[temp_input$name == nm, "val"] <- low
low_icer <- icer_calc(temp_input)
icer[icer$name == nm, "low"] <- low_icer
high <- param_table[param_table$name == nm, "high"]
temp_input[temp_input$name == nm, "val"] <- high
high_icer <- icer_calc(temp_input)
icer[icer$name == nm, "high"] <- high_icer
}
View(icer)
icer <- data.frame(matrix(NA, nrow = nrow(param_table), ncol = 4))
names(icer) <- c("names","mid", "low","high")
icer$name<- param_table$name
icer_mid <- icer_calc(param_table[,c("name", "mid")])
icer$mid <- icer_mid$icer_daly
base_input <- param_table[,c("name","mid")]
names(base_input) <- c("name","val")
for (nm in icer$name) {
temp_input <- base_input
low <- param_table[param_table$name == nm, "low"]
temp_input[temp_input$name == nm, "val"] <- low
low_icer <- icer_calc(temp_input)
icer[icer$name == nm, "low"] <- low_icer$icer_daly
high <- param_table[param_table$name == nm, "high"]
temp_input[temp_input$name == nm, "val"] <- high
high_icer <- icer_calc(temp_input)
icer[icer$name == nm, "high"] <- high_icer$icer_daly
}
View(icer)
icer <- data.frame(matrix(NA, nrow = nrow(param_table), ncol = 4))
names(icer) <- c("name","mid", "low","high")
icer$name<- param_table$name
icer_mid <- icer_calc(param_table[,c("name", "mid")])
icer$mid <- icer_mid$icer_daly
base_input <- param_table[,c("name","mid")]
names(base_input) <- c("name","val")
for (nm in icer$name) {
temp_input <- base_input
low <- param_table[param_table$name == nm, "low"]
temp_input[temp_input$name == nm, "val"] <- low
low_icer <- icer_calc(temp_input)
icer[icer$name == nm, "low"] <- low_icer$icer_daly
high <- param_table[param_table$name == nm, "high"]
temp_input[temp_input$name == nm, "val"] <- high
high_icer <- icer_calc(temp_input)
icer[icer$name == nm, "high"] <- high_icer$icer_daly
}
View(icer)
nm = v_cost
# nm = v_cost
temp_input <- base_input
low <- param_table[param_table$name == nm, "low"]
temp_input[temp_input$name == nm, "val"] <- low
low
param_table[param_table$name == nm, "low"]
param_table[param_table$name == "v_cost",]
param_table[param_table$name == "v_cost", "low"]
nm
nm = "v_cost"
param_table[param_table$name == nm, "low"]
v_cost <- params[params$name == "v_cost", 2]
v_cost
v_cost <- params[params$name == "v_cost", 2]
v_cost
rm (list = ls())
rm (list = ls())
v_cost <- params[params$name == "v_cost", 2]
param       <- data.frame (v_cost           = c(mid = 2.96,  low = 2.96,   high = 2.96),
delivery_cost    = c(mid = 1.49,  low = 0.246,  high = 4.752),
tot_pop          = c(mid = 159831,low = 159831, high = 159831),
vacc_pop         = c(mid = 113420, low = 113420, high = 113420),
postvacc_p1      = c(mid = 23,    low =23,      high =23),
facility_cost    = c(mid = 97.33, low = 16.676, high = 301.209),
dmc              = c(mid = 183.07,low = 18.507, high =532.241),
dnmc             = c(mid =30.13,  low =  4.361, high = 118.718),
indirect         = c(mid = 73.09, low = 32.370, high = 135.262),
ve               = c(mid = 0.81,  low =  0.55,  high =  0.916),
dw               = c(mid = 0.052, low =  0.032, high = 0.078),
illness_duration = c(mid =0.043,  low = 0.0392, high = 0.0469),
cfr              = c(mid = 0.019, low = 0.011,  high =  0.0441),
age_death        = c(mid = 7.5,   low = 1.840,  high = 13.95),
life_exp         = c(mid = 72.68, low =  69.576,high = 78.70))
param_table <- data.frame(t(param))
names(param_table) <- c("mid", "low", "high")
param_table$name <-   c("v_cost", "delivery_cost", "tot_pop", "vacc_pop", "postvacc_p1",
"facility_cost", "dmc", "dnmc", "indirect", "ve", "dw", "illness_duration",
"cfr", "age_death", "life_exp")
View(param_table)
v_cost <- params[params$name == "v_cost", 2]
View(param)
icer_calc <- function (params){
# select a value in a second column in param data table if param$name is "name"
v_cost <- params[params$name == "v_cost", 2]
delivery_cost <- params[params$name == "delivery_cost", 2]
tot_pop <- params[params$name == "tot_pop", 2]
vacc_pop <- params[params$name == "vacc_pop", 2]
postvacc_p1  <- params[params$name == "postvacc_p1", 2]
facility_cost <- params[params$name == "facility_cost", 2]
dmc <- params[params$name == "dmc", 2]
dnmc <- params[params$name == "dnmc", 2]
indirect <- params[params$name == "indirect", 2]
ve <- params[params$name == "ve", 2]
dw <- params[params$name == "dw", 2]
illness_duration <- params[params$name == "illness_duration", 2]
cfr <- params[params$name == "cfr", 2]
age_death <- params[params$name == "age_death", 2]
life_exp <- params[params$name == "life_exp", 2]
# formulas for icer
totcost_vacc       <- (v_cost + delivery_cost) * (vacc_pop) +
(postvacc_p1) * (facility_cost + dmc + dnmc + indirect)
prevacc            <- (postvacc_p1)/(1-ve*(vacc_pop/tot_pop))
totcost_unvacc     <- (prevacc)*(facility_cost+ dmc + dnmc + indirect)
incremental_cost   <- (totcost_vacc) - (totcost_unvacc)
incremental_effect <- (prevacc)      - (postvacc_p1)
icer               <- incremental_cost / incremental_effect
distance           <- (life_exp) - (age_death)
pre_death          <- (cfr)*(prevacc)
post_death         <- (cfr)*(postvacc_p1)
yll_pre            <- (pre_death)*(distance)
yll_post           <- (post_death)*(distance)
yld_pre            <- (prevacc)*(dw)*(illness_duration)
yld_post           <- (postvacc_p1)*(dw)*(illness_duration)
yld_averted        <- (prevacc - postvacc_p1)* (dw) *(illness_duration)
yll_averted        <- (yll_pre)  -(yll_post)
daly_total         <- (yll_averted)  + (yld_averted)
icer_daly          <- incremental_cost / daly_total
return(list(icer_daly = icer_daly))
}
v_cost <- params[params$name == "v_cost", 2]
param       <- data.frame (v_cost           = c(mid = 2.96,  low = 2.96,   high = 2.96),
delivery_cost    = c(mid = 1.49,  low = 0.246,  high = 4.752),
tot_pop          = c(mid = 159831,low = 159831, high = 159831),
vacc_pop         = c(mid = 113420, low = 113420, high = 113420),
postvacc_p1      = c(mid = 23,    low =23,      high =23),
facility_cost    = c(mid = 97.33, low = 16.676, high = 301.209),
dmc              = c(mid = 183.07,low = 18.507, high =532.241),
dnmc             = c(mid =30.13,  low =  4.361, high = 118.718),
indirect         = c(mid = 73.09, low = 32.370, high = 135.262),
ve               = c(mid = 0.81,  low =  0.55,  high =  0.916),
dw               = c(mid = 0.052, low =  0.032, high = 0.078),
illness_duration = c(mid =0.043,  low = 0.0392, high = 0.0469),
cfr              = c(mid = 0.019, low = 0.011,  high =  0.0441),
age_death        = c(mid = 7.5,   low = 1.840,  high = 13.95),
life_exp         = c(mid = 72.68, low =  69.576,high = 78.70))
# transpose the table
param_table <- data.frame(t(param))
# give name to each columns
names(param_table) <- c("mid", "low", "high")
param_table$name <-   c("v_cost", "delivery_cost", "tot_pop", "vacc_pop", "postvacc_p1",
"facility_cost", "dmc", "dnmc", "indirect", "ve", "dw", "illness_duration",
"cfr", "age_death", "life_exp")
v_cost <- params[params$name == "v_cost", 2]
icer <- data.frame(matrix(NA, nrow = nrow(param_table), ncol = 4))
View(icer)
names(icer) <- c("name","mid", "low","high")
View(icer)
icer$name<- param_table$name
icer_mid <- icer_calc(param_table[,c("name", "mid")])
View(icer_mid)
View(icer_mid)
?datable[]
?datatable[]
?datatable
icer$mid <- icer_mid$icer_daly
icer$mid <- icer_mid$icer_daly
View(icer_mid)
base_input <- param_table[,c("name","mid")]
View(base_input)
names(base_input) <- c("name","val")
View(base_input)
base_input <- param_table[,c("name","mid")]
View(base_input)
names(base_input) <- c("name","val")
param_table[,c("name", "mid")]
icer_mid <- icer_calc(param_table[,c( "mid")])
icer_mid <- icer_calc(param_table[,c("mid")])
icer_mid <- icer_calc(param_table[,"mid"])
icer_mid <- icer_calc(param_table[,list(mid)])
param_table[,c("name","mid")]
param_table[,c("name","mid")]
v_cost <- params[params$name == "v_cost", 2]
param_table[,]
v_cost <- params[params$name == "v_cost", 2]
icer_mid <- icer_calc(param_table[,c("name","mid")])
icer_low <- icer_calc(param_talbe[,c("name, "low")])
icer_low <- icer_calc(param_talbe[,c("name", "low")])
icer_low <- icer_calc(param_table[,c("name", "low")])
icer_low
base_input <- param_table[,c("name","mid")]
base_input <- param_table[,c("name","mid")]
base_input
names(base_input) <- c("name","val")
temp_input <- base_input
temp_input
low <- param_table[param_table$name == nm, "low"]
# nm = "v_cost"
temp_input <- base_input
low <- param_table[param_table$name == nm, "low"]
for (nm in icer$name) {
# nm = "v_cost"
temp_input <- base_input
low <- param_table[param_table$name == nm, "low"]
temp_input[temp_input$name == nm, "val"] <- low
low_icer <- icer_calc(temp_input)
icer[icer$name == nm, "low"] <- low_icer$icer_daly
high <- param_table[param_table$name == nm, "high"]
temp_input[temp_input$name == nm, "val"] <- high
high_icer <- icer_calc(temp_input)
icer[icer$name == nm, "high"] <- high_icer$icer_daly
}
low <- param_table[param_table$name == nm, "low"]
View(low_icer)
temp_input <- base_input
temp_input
temp_input[temp_input$name == nm, "val"] <- low
low
low_icer <- icer_calc(temp_input)
low_icer
source("~/GitHub/CEA-project/owsa_function_temp.R")
source("~/GitHub/CEA-project/owsa_function_temp.R")
source("~/GitHub/CEA-project/owsa_function_temp.R")
v_cost <- params[params$name == "v_cost", 2]
v_cost <- params[params$name == "v_cost", 2]
View(param_table)
icer$name<- param_table$name
icer$name
low_icer <- icer_calc(temp_input)
temp_input <- base_input
low_icer <- icer_calc(temp_input)
low_icer
low_icer$icer_daly
icer[icer$name == nm, "low"]
icer[icer$name == nm, "low"]
for (nm in icer$name) {
# nm = "v_cost"
temp_input <- base_input
low <- param_table[param_table$name == nm, "low"]
temp_input[temp_input$name == nm, "val"] <- low
low_icer <- icer_calc(temp_input)
icer[icer$name == nm, "low"] <- low_icer$icer_daly
high <- param_table[param_table$name == nm, "high"]
temp_input[temp_input$name == nm, "val"] <- high
high_icer <- icer_calc(temp_input)
icer[icer$name == nm, "high"] <- high_icer$icer_daly
}
low_icer <- icer_calc(temp_input)
for (i in 1:3) {
mid <- param_table[param_table$name == nm, c("name","mid")]
names(mid) <- c("name", "val")
}
View(icer)
low_icer$icer_daly
icer[icer$name == nm, "low"]
icer[icer$name == nm, "low"] <- low_icer$icer_daly
View(icer)
